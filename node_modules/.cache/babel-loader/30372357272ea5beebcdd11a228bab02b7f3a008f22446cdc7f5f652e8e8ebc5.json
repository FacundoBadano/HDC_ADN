{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, _cache[0] || (_cache[0] = [_createElementVNode(\"canvas\", {\n    id: \"myChart\"\n  }, null, -1 /* HOISTED */)]));\n}","map":{"version":3,"names":["_createElementBlock","_cache","_createElementVNode","id"],"sources":["/var/www/html/HDC_ADN/src/components/HypervectorDisplay.vue"],"sourcesContent":["<template>\n  <div>\n    <canvas id=\"myChart\"></canvas>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from \"vue\";\nimport Chart from \"chart.js/auto\";\n\nexport default {\n  props: {\n    hypervector: {\n      type: Array,\n      required: true,\n    },\n  },\n  setup(props) {\n    const chartRef = ref(null);\n\n    onMounted(() => {\n      const ctx = chartRef.value.getContext(\"2d\");\n      new Chart(ctx, {\n        type: \"bar\",\n        data: {\n          labels: props.hypervector.map((_, i) => i),\n          datasets: [\n            {\n              label: \"Hipervector\",\n              data: props.hypervector,\n              backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n              borderColor: \"rgba(54, 162, 235, 1)\",\n              borderWidth: 1,\n            },\n          ],\n        },\n        options: {\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: \"√çndice\",\n              },\n            },\n            y: {\n              title: {\n                display: true,\n                text: \"Valor\",\n              },\n            },\n          },\n        },\n      });\n    });\n\n    return {\n      chartRef,\n    };\n  },\n};\n</script>\n"],"mappings":";;uBACEA,mBAAA,CAEM,aAAAC,MAAA,QAAAA,MAAA,OADJC,mBAAA,CAA8B;IAAtBC,EAAE,EAAC;EAAS,2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}