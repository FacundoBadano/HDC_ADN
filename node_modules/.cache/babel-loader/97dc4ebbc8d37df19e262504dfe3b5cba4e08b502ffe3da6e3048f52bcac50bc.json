{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"p-4\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"text-red-500 mt-4\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"mt-4\"\n};\nconst _hoisted_4 = {\n  class: \"bg-gray-100 p-2 rounded\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", {\n    class: \"text-2xl font-bold mb-4\"\n  }, \"Generador de Hipervectores ADN\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.sequence = $event),\n    type: \"text\",\n    class: \"border border-gray-300 rounded p-2 mb-4 w-full\",\n    placeholder: \"Ingrese secuencia de ADN (G, T, K, A)\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.sequence]]), _createElementVNode(\"button\", {\n    onClick: $setup.generateHV,\n    class: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n  }, \" Generar Hipervector \"), $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($setup.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.hypervector ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", {\n    class: \"text-xl font-semibold\"\n  }, \"Hipervector generado:\", -1 /* HOISTED */)), _createElementVNode(\"pre\", _hoisted_4, _toDisplayString($setup.hypervector), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_cache","$event","$setup","sequence","type","placeholder","onClick","generateHV","error","_hoisted_2","_toDisplayString","_createCommentVNode","hypervector","_hoisted_3","_hoisted_4"],"sources":["/var/www/html/HDC_ADN/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"p-4\">\n    <h1 class=\"text-2xl font-bold mb-4\">Generador de Hipervectores ADN</h1>\n    <input\n      v-model=\"sequence\"\n      type=\"text\"\n      class=\"border border-gray-300 rounded p-2 mb-4 w-full\"\n      placeholder=\"Ingrese secuencia de ADN (G, T, K, A)\"\n    />\n    <button\n      @click=\"generateHV\"\n      class=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n    >\n      Generar Hipervector\n    </button>\n    <div v-if=\"error\" class=\"text-red-500 mt-4\">{{ error }}</div>\n    <div v-if=\"hypervector\" class=\"mt-4\">\n      <h2 class=\"text-xl font-semibold\">Hipervector generado:</h2>\n      <pre class=\"bg-gray-100 p-2 rounded\">{{ hypervector }}</pre>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\nimport axios from \"axios\";\n\nconst sequence = ref(\"\");\nconst hypervector = ref(null);\nconst error = ref(null);\n\nconst generateHV = async () => {\n  hypervector.value = null;\n  error.value = null;\n\n  try {\n    console.log(sequence.value);\n    const post = { sequence: sequence.value };\n    console.log(post);\n\n    const response = await axios.post(\n      \"http://127.0.0.1:8000/generate-hv\",\n      post\n    );\n\n    if (response.data.error) {\n      error.value = response.data.error;\n    } else {\n      hypervector.value = response.data.hypervector;\n    }\n  } catch {\n    error.value = \"Error al comunicarse con el servidor.\";\n  }\n};\n</script>\n\n<style>\npre {\n  white-space: pre-wrap;\n  word-wrap: break-word;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAK;;EADlBC,GAAA;EAesBD,KAAK,EAAC;;;EAf5BC,GAAA;EAgB4BD,KAAK,EAAC;;;EAEvBA,KAAK,EAAC;AAAyB;;uBAjBxCE,mBAAA,CAmBM,OAnBNC,UAmBM,G,0BAlBJC,mBAAA,CAAuE;IAAnEJ,KAAK,EAAC;EAAyB,GAAC,gCAA8B,sB,gBAClEI,mBAAA,CAKE;IARN,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIeC,MAAA,CAAAC,QAAQ,GAAAF,MAAA;IACjBG,IAAI,EAAC,MAAM;IACXT,KAAK,EAAC,gDAAgD;IACtDU,WAAW,EAAC;iDAHHH,MAAA,CAAAC,QAAQ,E,GAKnBJ,mBAAA,CAKS;IAJNO,OAAK,EAAEJ,MAAA,CAAAK,UAAU;IAClBZ,KAAK,EAAC;KACP,uBAED,GACWO,MAAA,CAAAM,KAAK,I,cAAhBX,mBAAA,CAA6D,OAA7DY,UAA6D,EAAAC,gBAAA,CAAdR,MAAA,CAAAM,KAAK,oBAfxDG,mBAAA,gBAgBeT,MAAA,CAAAU,WAAW,I,cAAtBf,mBAAA,CAGM,OAHNgB,UAGM,G,0BAFJd,mBAAA,CAA4D;IAAxDJ,KAAK,EAAC;EAAuB,GAAC,uBAAqB,sBACvDI,mBAAA,CAA4D,OAA5De,UAA4D,EAAAJ,gBAAA,CAApBR,MAAA,CAAAU,WAAW,iB,KAlBzDD,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}